---
source: src/lib.rs
assertion_line: 237
expression: rdf

---
schema:
  version: v0.1
design:
  name: ARM_Example
  version: "1.2"
root:
  children:
    - timer0
    - timer1
    - timer2
elements:
  timer0:
    type: blk
    children:
      - timer0.cr
      - timer0.sr
      - timer0.int
      - timer0.count
      - timer0.match
      - timer0.prescale_rd
      - timer0.prescale_wr
      - "timer0.reload[0]"
      - "timer0.reload[1]"
      - "timer0.reload[2]"
      - "timer0.reload[3]"
    id: timer0
    name: timer0
    addr: "0x40010000"
    offset: "0x40010000"
    doc: "32 Timer / Counter, counting up or down from different sources"
  timer0.cr:
    type: reg
    fields:
      - name: en
        lsb: 0
        nbits: 1
        access: read-write
        reset: "0x0"
        doc: Enable
      - name: rst
        lsb: 1
        nbits: 1
        access: write-only
        reset: "0x0"
        doc: Reset Timer
      - name: cnt
        lsb: 2
        nbits: 2
        access: read-write
        reset: "0x0"
        doc: Counting direction
      - name: mode
        lsb: 4
        nbits: 3
        access: read-write
        reset: "0x0"
        doc: Operation Mode
      - name: psc
        lsb: 7
        nbits: 1
        access: read-write
        reset: "0x0"
        doc: Use Prescaler
      - name: cntsrc
        lsb: 8
        nbits: 4
        access: read-write
        reset: "0x0"
        doc: Timer / Counter Source Divider
      - name: capsrc
        lsb: 12
        nbits: 4
        access: read-write
        reset: "0x0"
        doc: Timer / Counter Capture Source
      - name: capedge
        lsb: 16
        nbits: 2
        access: read-write
        reset: "0x0"
        doc: "Capture Edge, select which Edge should result in a counter increment or decrement"
      - name: trgext
        lsb: 20
        nbits: 2
        access: read-write
        reset: "0x0"
        doc: Triggers an other Peripheral
      - name: reload
        lsb: 24
        nbits: 2
        access: read-write
        reset: "0x0"
        doc: Select RELOAD Register n to reload Timer on condition
      - name: idr
        lsb: 26
        nbits: 2
        access: read-write
        reset: "0x0"
        doc: "Selects, if Reload Register number is incremented, decremented or not modified"
      - name: s
        lsb: 31
        nbits: 1
        access: read-write
        reset: "0x0"
        doc: Starts and Stops the Timer / Counter
    id: timer0.cr
    name: cr
    addr: "0x0"
    offset: "0x0"
    doc: Control Register
  timer0.sr:
    type: reg
    fields:
      - name: run
        lsb: 0
        nbits: 1
        access: read-only
        reset: "0x0"
        doc: Shows if Timer is running or not
      - name: match
        lsb: 8
        nbits: 1
        access: read-write
        reset: "0x0"
        doc: Shows if the MATCH was hit
      - name: un
        lsb: 9
        nbits: 1
        access: read-write
        reset: "0x0"
        doc: Shows if an underflow occured. This flag is sticky
      - name: ov
        lsb: 10
        nbits: 1
        access: read-write
        reset: "0x0"
        doc: Shows if an overflow occured. This flag is sticky
      - name: rst
        lsb: 12
        nbits: 1
        access: read-only
        reset: "0x0"
        doc: Shows if Timer is in RESET state
      - name: reload
        lsb: 14
        nbits: 2
        access: read-only
        reset: "0x0"
        doc: Shows the currently active RELOAD Register
    id: timer0.sr
    name: sr
    addr: "0x4"
    offset: "0x4"
    doc: Status Register
  timer0.int:
    type: reg
    fields:
      - name: en
        lsb: 0
        nbits: 1
        access: read-write
        reset: "0x0"
        doc: Interrupt Enable
      - name: mode
        lsb: 4
        nbits: 3
        access: read-write
        reset: "0x0"
        doc: "Interrupt Mode, selects on which condition the Timer should generate an Interrupt"
    id: timer0.int
    name: int
    addr: "0x10"
    offset: "0x10"
    doc: Interrupt Register
  timer0.count:
    type: reg
    fields: []
    id: timer0.count
    name: count
    addr: "0x20"
    offset: "0x20"
    doc: The Counter Register reflects the actual Value of the Timer/Counter
  timer0.match:
    type: reg
    fields: []
    id: timer0.match
    name: match
    addr: "0x24"
    offset: "0x24"
    doc: The Match Register stores the compare Value for the MATCH condition
  timer0.prescale_rd:
    type: reg
    fields: []
    id: timer0.prescale_rd
    name: prescale_rd
    addr: "0x28"
    offset: "0x28"
    doc: The Prescale Register stores the Value for the prescaler. The cont event gets divided by this value
  timer0.prescale_wr:
    type: reg
    fields: []
    id: timer0.prescale_wr
    name: prescale_wr
    addr: "0x28"
    offset: "0x28"
    doc: The Prescale Register stores the Value for the prescaler. The cont event gets divided by this value
  "timer0.reload[0]":
    type: reg
    fields: []
    id: "timer0.reload[0]"
    name: "reload[0]"
    addr: "0x50"
    offset: "0x50"
    doc: The Reload Register stores the Value the COUNT Register gets reloaded on a when a condition was met.
  "timer0.reload[1]":
    type: reg
    fields: []
    id: "timer0.reload[1]"
    name: "reload[1]"
    addr: "0x54"
    offset: "0x54"
    doc: The Reload Register stores the Value the COUNT Register gets reloaded on a when a condition was met.
  "timer0.reload[2]":
    type: reg
    fields: []
    id: "timer0.reload[2]"
    name: "reload[2]"
    addr: "0x58"
    offset: "0x58"
    doc: The Reload Register stores the Value the COUNT Register gets reloaded on a when a condition was met.
  "timer0.reload[3]":
    type: reg
    fields: []
    id: "timer0.reload[3]"
    name: "reload[3]"
    addr: "0x5c"
    offset: "0x5c"
    doc: The Reload Register stores the Value the COUNT Register gets reloaded on a when a condition was met.
  timer1:
    type: blk
    children: []
    id: timer1
    name: timer1
    addr: "0x40010100"
    offset: "0x40010100"
    doc: undefined
  timer2:
    type: blk
    children: []
    id: timer2
    name: timer2
    addr: "0x40010200"
    offset: "0x40010200"
    doc: undefined

